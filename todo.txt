todo

Requirement: User study promising
Requirement: 200 Tracks successfull. Tested Successfully on 17.12.2014
- Create developer Account on Google

- Distribute to christopher. Make serious user study


(

- Remove failed downloads from download list. 

- Information tracks, mb, duration @ download button

- Don't retry download when aborted by user

)

- also load for featured profiles

- Choose download folder : button opens input file displaying: "Downloads/ _________". initial value "SoundCloud SnapShot" Save on Enter Key / Set Button

- Download Progress Bar: per profile: 2 lines: 1. line "lockerflocker", 2. line "4/20 (3 Errors)". Blue Style, background-width = progress

- Make Playlists expanded initially

- Fix bug: no button when logged in -> position absolute

Done - Make 50px less height

#16.12.2014
Done - Immediatly trigger next download when dl started successfully. Delay only on error. 
Feedback: found nice solution for this hard problem

Done - Feedback on "Download": show progress bar, 

Done - Move download link requesting to backgroundpage to queue

closed - Fix bug: no content when page loads first in background. Tracklist should also be maintained when track loads in background
Feedback: couldn't reproduce

#15.12.2014

Done - Make serious user study with JÃ¶rg

#14.12.2014

Done - Reload on further user_id changed messages

Done - Make button first visible when receiving user_id changed message.  
Feedback: loading icon when no content available yet

Done - Make background page maintain active user_id (profile) per tab. Inform tab when tabs user_id changed.
Reason: multiple open tabs. Switch profiles in tab.
Feedback: was hard: page changes don't necessarily lead to reloading of user profile data. -> Maintain a list with urls mapped to user_ids and look for url changes. 

Done - Make download queue @ background page: schedule fifo. re-enqueue on error. maintain progress to be queried by task 


#13.12.2014

Done - test if 100 downloads are even possible 
Feedback: server denies when theres too much traffic. 
Solution: Make download stack @ background page. Download one track after another. 

Done - visually distinguish playlists from tracks in ui

Done - make playlists expandable und collapsable via button

Done - put tracks in playlist div

Done - distinguish more between plalists and tracks in gui

Done - make some graphics design
